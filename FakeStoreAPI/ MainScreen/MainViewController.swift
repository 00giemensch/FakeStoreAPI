//
//  MainViewController.swift
//  FakeStoreAPI
//
//  Created by Ilnur on 09.08.2025.
//

import UIKit

class MainViewController: UIViewController {
    
    var tableData = Item.mockData()
    
    private lazy var tableView: UITableView = {
        $0.dataSource = self //—Å–≤—è–∑—å —Ç–∞–±–ª–∏—Ü—ã —Å –º–æ–¥–µ–ª—å—é
        $0.delegate = self
        $0.register(ItemCell.self, forCellReuseIdentifier: "Cell")
//        $0.separatorStyle = .none //—É–¥–∞–ª–µ–Ω–∏–µ –ª–∏–Ω–∏–π –º–µ–∂–¥—É —è—á–µ–π–∫–∞–º–∏
        $0.translatesAutoresizingMaskIntoConstraints = false
        $0.rowHeight = 100
//        $0.estimatedRowHeight = 100
//        $0.style = .insetGrouped
        return $0
    }(UITableView())
    
    let greetingsLbl: UILabel = {
        $0.text = "–ü—Ä–∏–≤–µ—Ç, –∞–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!"
        $0.font = UIFont.systemFont(ofSize: 20, weight: .semibold)
        $0.setContentHuggingPriority(.required, for: .horizontal)
        $0.translatesAutoresizingMaskIntoConstraints = false
        return $0
    }(UILabel())

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .systemGray6
        title = "–ú–∞–≥–∞–∑–∏–Ω"
        
        view.addSubview(greetingsLbl)
        view.addSubview(tableView)
        
        setupConstraints()
    }
    
        
    func setupConstraints() {
        NSLayoutConstraint.activate([
            greetingsLbl.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor,constant: 16),
            greetingsLbl.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 16),
            greetingsLbl.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -16),
            
            tableView.topAnchor.constraint(equalTo: greetingsLbl.bottomAnchor, constant: 30),
            tableView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            tableView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
        ])
    }
    /*
     +-----------------------------------------------------+
     |                –ù–∞–∑–≤–∞–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ (–æ–ø—Ü.)              |
     +-----------------------------------------------------+
     | [ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ üëã ]                                  | ‚Üê –∫–Ω–æ–ø–∫–∞ —Å–≤–µ—Ä—Ö—É
     +-----------------------------------------------------+
     |                                                     |
     | [–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ 1]   -   $12.99                    | ‚Üê UITableView
     | [–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ 2]   -   $8.49                     |
     | [–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ 3]   -   $42.00                    |
     | ...                                                 |
     | [–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ N]   -   $10.99                    |
     |                                                     |
     +-----------------------------------------------------+
    
     1. –ù–∞ —ç–∫—Ä–∞–Ω–µ 2 —ç–ª–µ–º–µ–Ω—Ç–∞:
     1. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     2. –ö–Ω–æ–ø–∫–∞ ¬´–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ¬ª
     2. –ü–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ—è–≤–ª—è–µ—Ç—Å—è –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
     –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏–º–µ–Ω–∏, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
     3. –ü—Ä–∏ –∑–∞—Ö–æ–¥–µ –Ω–∞ —ç–∫—Ä–∞–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–∞–±–ª–∏—Ü—ã.
     4. –°–ø–∏—Å–æ–∫ API –Ω–∞ –≤—ã–±–æ—Ä (–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ª—é–±—É—é):
     1. –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è API: https://fakestoreapi.com. –≠–Ω–¥–ø–æ–∏–Ω—Ç:
     https://fakestoreapi.com/products. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ (title) –∏ —Ü–µ–Ω—É
     (price). –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –º–æ–∂–µ—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é.
     
     */

}

extension MainViewController: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: "Cell", for: indexPath) as? ItemCell else {
            return UITableViewCell() //–µ—Å–ª–∏ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞(nil —Ç–∞–º, –≥–¥–µ "Cell"), —Ç–æ –≤–µ—Ä–Ω–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ –ø—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
        }
        cell.setupCell(item: tableData[indexPath.row])
        cell.selectionStyle = .none //—É–±–∏—Ä–∞–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —è—á–µ–π–∫—É
        
//        cell.completion = { [weak self] in
//            guard let self = self else { return }
//            let vc = SecondVC()
//            vc.title = self.tableData[indexPath.row].title
//            self.navigationController?.pushViewController(vc, animated: true)
//        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        tableData.count //count - –ø–æ—Å–∫–æ–ª—å–∫—É –Ω–µ—Ç —Å–µ–∫—Ü–∏–π
    }
}

extension MainViewController: UITableViewDelegate {}

